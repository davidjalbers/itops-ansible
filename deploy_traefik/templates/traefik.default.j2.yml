entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    asDefault: true
    address: ":443"
    http:
      tls:
        certResolver: leProductionResolver
          domains:
{% for entry in traefik_domains | default([]) %}
{% if entry is string %}
            - main: "{{ entry }}"
{% else %}
            - main: "{{ entry.domain }}"
{% set b_wildcard = entry.b_wildcard | default(false) %}
{% if b_wildcard %}
              sans:
                - "*.{{ entry.domain }}"
{% endif %}
{% endif %}
{% endfor %}
{% if b_traefik_configure_metrics %}
  metrics:
    address: ":{{ traefik_metrics_port }}"
{% endif %}

providers:
  file:
    directory: "/etc/traefik/conf.d"
  docker:
    exposedByDefault: false
    network: "{{ traefik_network_name }}"

certificatesResolvers:
  leProductionResolver:
    acme:
      email: "{{ traefik_letsencrypt_email }}"
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      storage: "/letsencrypt/acme-production.json"
      dnsChallenge:
        provider: cloudflare
  leStagingResolver:
    acme:
      email: "{{ traefik_letsencrypt_email }}"
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      storage: "/letsencrypt/acme-staging.json"
      dnsChallenge:
        provider: cloudflare

{% if b_traefik_configure_metrics %}
metrics:
  prometheus:
    entryPoint: metrics
{% endif %}

{% if b_traefik_configure_dashboard %}
api:
  dashboard: true
{% endif %}

accessLog:
  format: "json"
  fields:
    defaultMode: drop
    names:
      # General info
      StartUTC: keep
      Duration: keep
      RetryAttempts: keep
      TLSVersion: keep
      TLSCipher: keep
      RouterName: keep # Traefik router that handled the request
      ServiceName: keep # Traefik service that handled the request
      ServiceURL: keep
      # Request info (client)
      ClientAddr: keep
      RequestAddr: keep
      RequestMethod: keep
      RequestPath: keep
      RequestProtocol: keep
      RequestContentSize: keep
      # Processing info (what was returned by origin / upstream server to Traefik)
      OriginDuration: keep
      OriginStatus: keep
      OriginContentSize: keep
      # Response info (what was returned to client by Traefik)
      DownstreamStatus: keep
      DownstreamContentSize: keep
    headers:
      names:
        User-Agent: keep
        Content-Type: keep
        # Forwarding headers
        X-Forwarded-For: keep
        X-Real-IP: keep
        CF-Connecting-IP: keep

log:
  level: "INFO"
  format: "json"
